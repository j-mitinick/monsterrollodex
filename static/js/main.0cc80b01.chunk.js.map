{"version":3,"sources":["Component/card/card.component.jsx","Component/card-list/card-list.component.jsx","Component/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchField","placeholder","handleChange","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","filteredMonsters","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUACaA,EAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,oBAC1E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCHHC,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACtB,qBAAKP,UAAU,YAAf,SAEIO,EAASC,KAAI,SAAAT,GAAO,OAAE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCJlCO,G,MAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACzB,qBAAKX,UAAU,mBAAf,SACE,uBAAOA,UAAU,SAASU,YAAaA,EAAaE,SAAUD,QCmCnDE,E,kDAhCb,aAAc,IAAD,8BACX,gBAcFF,aAAe,SAACG,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXZ,SAAS,GACTS,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACR,SAASiB,S,oBAOvC,WAAS,IAAD,OACAC,EAAmBC,KAAKP,MAAMZ,SAASoB,QAAO,SAAA5B,GAAO,OAAEA,EAAQK,KAAKwB,cAAcC,SAAS,EAAKV,MAAMH,YAAYY,kBACxH,OACE,sBAAK5B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAaU,YAAY,wBAAwBC,aAAce,KAAKf,eACpE,cAAC,EAAD,CAAUJ,SAAUkB,W,GA1BVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cc80b01.chunk.js","sourcesContent":["import './card.style.css';\r\nexport const Card = ({monster})=>(\r\n  <div className=\"card-container\">\r\n    <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster rolodex\"/>\r\n    <h2>{monster.name}</h2>\r\n    <p>{monster.email}</p>\r\n  </div>\r\n);","import { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\nexport const CardList = ({monsters})=>(\r\n  <div className=\"card-list\">\r\n    {\r\n      monsters.map(monster=><Card key={monster.id} monster={monster}/>)\r\n    }\r\n  </div>\r\n);","import './search.style.css';\r\nexport const SearchField = ({placeholder,handleChange})=>(\r\n  <div className=\"search-container\">\r\n    <input className=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n  </div>\r\n);","import {Component} from 'react';\nimport './App.css';\nimport { CardList } from './Component/card-list/card-list.component';\nimport {SearchField} from './Component/search/search.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n\n  handleChange = (e)=>{\n    this.setState({searchField:e.target.value})\n  }\n\n  render(){\n    const filteredMonsters = this.state.monsters.filter(monster=>monster.name.toLowerCase().includes(this.state.searchField.toLowerCase()))\n    return (\n      <div className=\"app\">\n        <h1>Monster Rollodex</h1>\n        <SearchField placeholder=\"Buscar por um monstro\" handleChange={this.handleChange}  />\n        <CardList monsters={filteredMonsters}/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}